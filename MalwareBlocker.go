package main

import (
	"encoding/json"
	"log"
	"net/http"

	"github.com/gorilla/mux"
)

// function - is URL bad? If it' in the list - bad, if not -good
/* func AnalyseURL(url string) bool {
	return true // hardcoding the answer
}
*/
//Set up JSON

type MalwareJSON struct {
	Status string
}

//Bad URL response - makes JSON (status:bad)

func MalwareResponse(w http.ResponseWriter, r *http.Request) {
	response := Responses{
		MalwareJSON{Status: "Bad"},
	}

	json.NewEncoder(w).Encode(response)
}

type Responses []MalwareJSON

//Bad URL response - makes JSON (status:bad)

//Good URL Response - take user to website

//Function handleRequests - if bad return Bad URL response,
//if good call Good URL response

func handleRequests() {
	router := mux.NewRouter().StrictSlash(true)
	router.HandleFunc("/", MalwareResponse)
	router.HandleFunc("/malware", MalwareResponse)

	log.Fatal(http.ListenAndServe(":8080", router))

}

func main() {

	// call handleRequests function
	handleRequests()
}
