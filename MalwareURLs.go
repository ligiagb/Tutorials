package main

import (
	"io/ioutil"
	"net/http"
	"strings"
)

// get URL Malware data - and compare
func MalwareURLs(url string) bool {
	ListOfurl := "https://zeustracker.abuse.ch/blocklist.php?download=compromised"

	//Needs to trimm url, or it doesn't compare the correct string
	trimmedurl := strings.TrimLeft(url, "/")

	//some magic.... mainly from here: https://www.lynda.com/Go-tutorials/Reading-text-file-from-web/412378/445025-4.html?autoplay=false
	// figure out how it's really working
	//Contains - https://golang.org/pkg/strings/ - check if it can give false positives for strings that are a partial match
	resp, err := http.Get(ListOfurl)
	if err != nil {
		panic(err)
	}

	bytes, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}
	URLsList := string(bytes)

	return (strings.Contains(URLsList, trimmedurl))

}

/*
//list of badURLs
type Route struct {
	Pattern string
}
type Routes []Route

var routes = Routes{
	Route{"/Malwares"},
	Route{"/urlinfo/1/capacitacion.inami.gob.mx/capa.exe"},
	Route{"/Dontgothere"},
}
*/
